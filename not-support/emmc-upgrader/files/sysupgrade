#!/bin/sh
#
# Install a new rootfs on the non-active root partition
#

find_root_device()
{
    local part=""
    local rdev=`stat -c %04D /`

    for file in $(find /dev -type b 2>/dev/null); do
        local pdev=$(stat -c %02t%02T $file)

        if [ "${pdev}" = "${rdev}" ]; then
            part=${file}
            break
        fi
    done

    # strip off the pX from end
    echo ${part} | sed -r 's/.{2}$//'
}

root_dev=$(find_root_device)

if [ -z $root_dev} ]; then
    echo "Unable to determine root device"
    exit 1
fi

flags_part=${root_dev}p5

mnt_root=/mnt
flags_mnt=${mnt_root}/bootflags
upgrade_mnt=${mnt_root}/upgrade

echo -e -n "Finding the current root partition : "

cat /proc/cmdline | grep -q ${root_dev}p2

if [ $? -eq 0 ]; then
    current_root=${root_dev}p2
    new_root=${root_dev}p3
else
    cat /proc/cmdline | grep -q ${root_dev}p3

    if [ $? -eq 0 ]; then
        current_root=${root_dev}p3
        new_root=${root_dev}p2
    else
        echo "fail"
        echo "Current root device is not ${root_dev}p2 or ${root_dev}p3"
        exit 1
    fi
fi

echo "${current_root}"

echo "New root will be ${new_root}"

echo -e -n "Checking that ${mnt_root} is not in use : "

mount | grep -q ${mnt_root}

if [ $? -eq 0 ]; then
    echo "fail"
    echo "${mnt_root} is already in use"
    exit 1
fi

echo "ok"

echo -e -n "Checking for a ${flags_part} partition : "

fdisk -l ${root_dev} | grep -q ${flags_part}

if [ $? -eq 1 ]; then
    echo "fail"
    echo "There is no ${flags_part} partition"
    exit 1
fi

echo "ok"

echo -e -n "Checking that ${flags_part} is not in use : "

mount | grep -q ${flags_part}

if [ $? -eq 0 ]; then
    echo "fail"
    echo "${flags_part} is already mounted"
    exit 1
fi

echo "ok"

echo -e -n "Checking if ${flags_mnt} mount point exists : "

if [ ! -d ${flags_mnt} ]; then
    echo "no"

    echo -e -n "Attempting to create mount point ${flags_mnt} : "

    mkdir ${flags_mnt}

    if [ $? -eq 1 ]; then
        echo "fail"
        exit 1
    else
        echo "ok"
    fi
else
    echo "ok"
fi

echo -e -n "Checking if ${upgrade_mnt} mount point exists : "

if [ ! -d ${upgrade_mnt} ]; then
    echo "no"

    echo -e -n "Attempting to create mount point ${upgrade_mnt} : "

    mkdir ${upgrade_mnt}

    if [ $? -eq 1 ]; then
        echo "fail"
        exit 1
    else
        echo "ok"
    fi
else
    echo "ok"
fi

echo "Formatting partition ${new_root} as ext4"

mkfs.ext4 -q -F ${new_root}

if [ $? -ne 0 ]; then
    echo "fail"
    echo "Error formatting the new root partition ${new_root}"
    exit 1
fi

echo -e -n "Mounting ${new_root} on ${upgrade_mnt} : "

mount -t ext4 ${new_root} ${upgrade_mnt}

if [ $? -ne 0 ]; then
    echo "fail"
    echo "Error mounting partition ${new_root} on ${upgrade_mnt}"
    exit 1
else
    echo "ok"
fi

echo -e -n "Extracting ${1} to ${upgrade_mnt} : "

EXTRACT_UNSAFE_SYMLINKS=1 tar -C ${upgrade_mnt} -xJf ${1}

if [ $? -ne 0 ]; then
    echo "fail"
    echo "Error extracting the root filesystem"
    umount ${new_root}
    exit 1
else
    echo "ok"
fi

if [ -x /usr/bin/syshook ]; then
    echo "Running /usr/bin/syshook"
    /usr/bin/syshook ${upgrade_mnt}

    if [ $? -ne 0 ]; then
        umount ${upgrade_root}
        exit 1
    fi
fi

echo -e -n "Unmounting new root ${new_root} : "

umount ${new_root}

if [ $? -ne 0 ]; then
    echo "fail"
    echo "Failed to umount new root"
    exit 1
else
    echo "ok"
fi

# now update the flag partition

echo -e -n "Mounting ${flags_part} read-write on ${flags_mnt} : "

mount -t vfat ${flags_part} ${flags_mnt}

if [ $? -ne 0 ]; then
    echo "fail"
    echo "Failed to mount ${flags_part} on ${flags_mnt} as type vfat"
    exit 1
fi

echo "ok"

echo -e -n "Updating flags partition : "

if [ "${new_root}" = "${root_dev}p2" ]; then
    rm -rf ${flags_mnt}/two*
    touch ${flags_mnt}/two
    chmod 600 ${flags_mnt}/two
    sync
    rm -rf ${flags_mnt}/three*
else
    rm -rf ${flags_mnt}/three*
    touch ${flags_mnt}/three
    sync
    rm -rf ${flags_mnt}/two*
fi

echo "ok"

echo -e -n "Unmounting ${flags_part} : "

umount ${flags_part}

if [ $? -ne 0 ]; then
    echo "fail"
    echo "Failed to unmount ${flags_part}"
    exit 1
fi

echo "ok"

echo "New root partition will be ${new_root}"
