#!/bin/sh
#
# Hook for custom upgrade steps.
# Update config files or anything else on the new rootfs now
# while it is still writable
# This script is given the already mounted new rootfs as $1
# Returning 1 on failure will abort the upgrade.

if [ ! -d ${1} ]; then
    echo "Need to know upgrade mount point"
    exit 1
fi

upgrade_mnt=${1}

echo "  Copying /etc/fstab"

cp /etc/fstab ${upgrade_mnt}/etc/fstab

if [ $? -ne 0 ]; then
    echo "Error copying /etc/fstab"
    exit 1
fi

# if we have a /data mount point in the current system
# make sure we also have it in the new system
grep -q -e '\s\/data\s' /etc/fstab

if [ $? -eq 0 ]; then
    echo "  Creating /data directory"
    mkdir -p ${upgrade_mnt}/data

    if [ $? -ne 0 ]; then
        echo "Error creating directory /data"
        exit 1
    fi
fi

# likewise for /opt in fstab
grep -q -e '\s\/opt\s' /etc/fstab

if [ $? -eq 0 ]; then
    echo "  Creating /opt directory"
    mkdir -p ${upgrade_mnt}/opt

    if [ $? -ne 0 ]; then
        echo "Error creating directory /opt"
        exit 1
    fi
fi

echo "  Copying /etc/hostname"
cp /etc/hostname ${upgrade_mnt}/etc/hostname

if [ $? -ne 0 ]; then
    echo "Error copying /etc/hostname"
    exit 1
fi

echo "  Copying /etc/ssh/* files"
mkdir -p ${upgrade_mnt}/etc/ssh
cp --preserve=mode,ownership /etc/ssh/* ${upgrade_mnt}/etc/ssh/

if [ $? -ne 0 ]; then
    echo "Error copying /etc/ssh files"
    exit 1
fi

echo "  Copying /etc/passwd and /etc/shadow"

# keep the old passwords
cp --preserve=mode,ownership /etc/passwd ${upgrade_mnt}/etc/passwd

if [ $? -ne 0 ]; then
    echo "Error copying /etc/passwd"
    exit 1
fi

cp --preserve=mode,ownership /etc/shadow ${upgrade_mnt}/etc/shadow

if [ $? -ne 0 ]; then
    echo "Error copying /etc/shadow"
    exit 1
fi

if [ -f /etc/wpa_supplicant.conf ]; then
    echo "  Copying /etc/wpa_supplicant.conf"

    cp --preserve=mode,ownership /etc/wpa_supplicant.conf ${upgrade_mnt}/etc/wpa_supplicant.conf

    if [ $? -ne 0 ]; then
        echo "Error copying /etc/wpa_supplicant.conf"
        exit 1
    fi
fi

if [ -f /etc/network/interfaces ]; then
    echo "  Copying /etc/network/interfaces"

    mkdir -p ${upgrade_mnt}/etc/network

    cp --preserve=mode,ownership /etc/network/interfaces ${upgrade_mnt}/etc/network/interfaces

    if [ $? -ne 0 ]; then
        echo "Error copying /etc/wpa_supplicant.conf"
        exit 1
    fi
fi

if [ -d /etc/wireguard ]; then

    count=$(ls /etc/wireguard | wc -l)

    if [ "$count" -gt 0 ]; then
        echo "  Copying /etc/wireguard files"

        mkdir -p ${upgrade_mnt}/etc/wireguard

        cp --preserve=mode,ownership /etc/wireguard/* ${upgrade_mnt}/etc/wireguard

        if [ $? -ne 0 ]; then
            echo "Error copying /etc/wireguard files"
            exit 1
        fi
    fi
fi

if [ -f /home/root/.ssh/authorized_keys ]; then
    echo "  Copying /home/root/.ssh/authorized_keys"

    mkdir -p ${upgrade_mnt}/home/root/.ssh

    cp --preserve=mode,ownership /home/root/.ssh/authorized_keys ${upgrade_mnt}/home/root/.ssh

    if [ $? -ne 0 ]; then
        echo "Error copying /home/root/.ssh/authorized_keys"
        exit 1
    fi
fi

echo "  Generating a random-seed file for urandom"

mkdir -p ${upgrade_mnt}/var/lib/urandom
dd if=/dev/urandom of=${upgrade_mnt}/var/lib/urandom/random-seed bs=512 count=1
chmod 600 ${upgrade_mnt}/var/lib/urandom/random-seed

exit 0
